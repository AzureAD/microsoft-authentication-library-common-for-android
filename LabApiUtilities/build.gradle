plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.microsoft.identity.buildsystem' version '0.2.3'

    // the below build plugin allows to generate BuildConfig files in a JAVA gradle project.
    // BuildConfig files are generated by default in an Android project, however, a non-Android java
    // module doesn't really have a concept of BuildConfig. This plugin allows us to create similar
    // looking BuildConfig constants in a java project.
    id 'com.github.gmazzo.buildconfig' version '3.0.0'
}

apply from: '../versioning/version_tasks.gradle'

project.ext.vstsUsername = System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME") : project.findProperty("vstsUsername")
project.ext.vstsPassword = System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")

version = getAppVersionName()

def labClientSecret = "" // will be blank unless specified by developer

if (project.hasProperty("labSecret")) {
    labClientSecret = labSecret
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

buildSystem {
    desugar = false
}

buildConfig {
    // forces the package. Defaults to '${project.group}'
    packageName("com.microsoft.identity.labapi.utilities")
    useJavaOutput() // forces the outputType to 'java'
}


sourceSets {
    main {
        buildConfigField("String", "LAB_CLIENT_SECRET", "\"$labClientSecret\"")
        java.srcDirs = ['src/main', "$project.buildDir/generated/source/buildConfig/main"]
    }
    test {
        java.srcDirs = ['src/test', "$project.buildDir/generated/source/buildConfig/test"]
        buildConfigField("String", "LAB_CLIENT_SECRET", "\"$labClientSecret\"")
    }
}

dependencies {
    // labapi per product flavor
    if (findProject(":labapi") != null) {
        //Use project reference if available
        implementation(project(":labapi")) {
            transitive = true
        }
    } else {
        //Always use the latest release
        implementation(group: 'com.microsoft.identity', name: 'labapi', version: '0.0.+')
    }

    implementation "com.nimbusds:nimbus-jose-jwt:$rootProject.ext.nimbusVersion"
    implementation "com.microsoft.azure:msal4j:$rootProject.ext.msal4jVersion"
    implementation 'com.microsoft.azure:adal4j:1.6.7'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    compileOnly "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
    implementation 'commons-lang:commons-lang:2.6'

    testCompileOnly "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$rootProject.ext.lombokVersion"
}

afterEvaluate {
    // these tasks are generated by the buildconfig plugin..for more details, read comment about it
    // above in the plugins block.
    compileJava.dependsOn generateBuildConfig, generateTestBuildConfig
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.microsoft.identity'
            artifactId 'lab-api-utilities'
            from components.java
        }
    }

    repositories {
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username project.ext.vstsUsername
                password project.ext.vstsPassword
            }
        }
        maven {
            name "vsts-maven-android"
            url 'https://identitydivision.pkgs.visualstudio.com/IDDP/_packaging/Android/maven/v1'
            credentials {
                username project.vstsUsername
                password project.vstsPassword
            }
        }
    }
}
