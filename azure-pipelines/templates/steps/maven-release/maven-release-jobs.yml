# File: azure-pipelines\templates\steps\maven-release\maven-release-jobs.yml
# Description: Job template to publish to maven central (sonatype)

parameters:
# general
- name: checkoutSubmodules
  default: false
  values:
  - true
  - false
  - recursive
- name: project
- name: projectVersion
- name: envVstsMvnAndroidAccessTokenVar
  default: 'none'
# release artifacts
- name: gradleAssembleReleaseTask
- name: gradleGeneratePomFiletask
- name: aarSourceFolder
  default: 'none'
- name: jarSourceFolder
  default: 'none'
- name: pomSourceFolder
  default: 'none'
- name: extraSourceFolder
  default: 'none'
- name: extraContents
  default: '**'
# gpg files
- name: gpgAar
  default: false
- name: gpgJar
  default: false
- name: gpgSourcesJar
  default: false
- name: gpgJavadocJar
  default: false

jobs:
- job: sdl_maven
  displayName: SDL and Maven Tasks
  cancelTimeoutInMinutes: 1
  pool:
    name: 1ES-AndroidPool-EOC
  steps:
  - checkout: self
    clean: true
    submodules: ${{ parameters.checkoutSubmodules }}
    persistCredentials: True
  - ${{ if ne(parameters.envVstsMvnAndroidAccessTokenVar, 'none') }}:
    - task: CmdLine@1
      displayName: Set MVN Access Token in Environment
      inputs:
        filename: echo
        arguments: '##vso[task.setvariable variable=${{ parameters.envVstsMvnAndroidAccessTokenVar }}]$(System.AccessToken)'
  - task: Gradle@3
    name: Gradle3
    displayName: Assemble Release
    inputs:
      tasks: ${{ parameters.gradleAssembleReleaseTask }}
      publishJUnitResults: false
      jdkArchitecture: x64
  - task: Gradle@3
    displayName: Generate Pom file
    inputs:
      tasks: ${{ parameters.gradleGeneratePomFiletask }}
      publishJUnitResults: false
      jdkArchitecture: x64
  - ${{ if ne(parameters.extraSourceFolder, 'none') }}:
    - task: CopyFiles@2
      displayName: Copy ${{ parameters.extraSourceFolder }} to Artifact Staging Directory
      inputs:
        SourceFolder: ${{ parameters.extraSourceFolder }}
        Contents: ${{ parameters.extraContents }}
        TargetFolder: $(Build.ArtifactStagingDirectory)
  - ${{ if ne(parameters.aarSourceFolder, 'none') }}:
    - task: CopyFiles@2
      name: CopyFiles1
      displayName: Copy aar to Artifact Staging Directory
      inputs:
        SourceFolder: ${{ parameters.aarSourceFolder }}
        Contents: '**/*.aar'
        TargetFolder: $(Build.ArtifactStagingDirectory)
  - ${{ if ne(parameters.jarSourceFolder, 'none') }}:
    - task: CopyFiles@2
      displayName: Copy jars to Artifact Staging Directory
      inputs:
        SourceFolder: ${{ parameters.jarSourceFolder }}
        Contents: '**/*.jar'
        TargetFolder: $(Build.ArtifactStagingDirectory)
  - ${{ if ne(parameters.pomSourceFolder, 'none') }}:
    - task: CopyFiles@2
      displayName: Copy pom to Artifact Staging Directory
      inputs:
        SourceFolder: ${{ parameters.pomSourceFolder }}
        Contents: '**/*.pom'
        TargetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishPipelineArtifact@1
    name: PublishPipelineArtifact1
    displayName: 'Publish Artifact: Build Outputs'
    inputs:
      ArtifactName: BuildOutputs
      TargetPath: $(Build.ArtifactStagingDirectory)
- job: gpg_siging
  variables:
    BuildOutputs: build_outputs
  displayName: GPG Signing
  cancelTimeoutInMinutes: 1
  dependsOn: sdl_maven
  pool:
    name: 1ES-AndroidPool-EOC
  steps:
  - ${{ if not(startsWith(parameters.project, 'common')) }}:
    - checkout: common
      clean: true
  - task: DownloadPipelineArtifact@2
    displayName: Download Pipeline Artifacts
    inputs:
      artifact: BuildOutputs
      path: $(Build.SourcesDirectory)/$(BuildOutputs)
  - task: DownloadSecureFile@1
    name: private
    displayName: Download GPG private key
    inputs:
      secureFile: private.gpg
      retryCount: 5
  - task: DownloadSecureFile@1
    name: public
    displayName: Download GPG public key
    inputs:
      secureFile: public.gpg
      retryCount: 5
  - task: DownloadSecureFile@1
    name: passphrase
    displayName: Download GPG passphrase
    inputs:
      secureFile: passphrase.txt
      retryCount: 5
  - task: Bash@3
    displayName: GPG Signing
    inputs:
      targetType: filePath
      filePath: azure-pipelines/templates/steps/maven-release/gpg-signing.sh
      workingDirectory: $(Build.SourcesDirectory)/$(BuildOutputs)
    env:
      PROJECT: ${{ parameters.project }}
      PROJECTVERSION: ${{ parameters.projectVersion }}
      JAR: ${{ parameters.gpgJar }}
      AAR: ${{ parameters.gpgAar }}
      SOURCESJAR: ${{ parameters.gpgSourcesJar }}
      JAVADOCJAR: ${{ parameters.gpgJavadocJar }}
  - task: CopyFiles@2
    inputs:
      SourceFolder: $(Build.SourcesDirectory)/$(BuildOutputs)
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: GPG Signing artifacts'
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: GPG Signing artifacts
  - task: CmdLine@2
    displayName: Download Python Requests Library
    inputs:
      script: pip install requests
  - task: EsrpRelease@4
    inputs:
      ConnectedServiceName: 'AndroidAuth_ESRP_Release'
      Intent: 'PackageDistribution'
      ContentType: 'Python'
      ContentSource: 'Folder'
      FolderLocation: '$(Build.ArtifactStagingDirectory)'
      WaitForReleaseCompletion: true
      Owners: '$(releaseOwners)'
      Approvers: '$(releaseApprovers)'
      ServiceEndpointUrl: '$(esrpServiceEndpointUrl)'
      MainPublisher: '$(esrpMainPublisher)'
      DomainTenantId: '$(esrpDomainTenantId)'
...
