# File: azure-pipelines/templates/steps/continuous-delivery/assemble-publish-projversion.yml
# Description: Template to assemble and publish
# parameters: 'project' gradle project
# parameters: 'envVstsMvnAt' Environment VSTS Maven Access Token
# parameters: 'variant' gradle variant for test assemble and publish
# parameters: 'artifactFolder' path to publish artifacts
# parameters: 'buildArguments' additional arguments for build
# parameters: 'publishArguments' additional arguments for publish
# parameters: 'testArguments' additional arguments for test
parameters:
- name: project
- name: envVstsMvnAt
  default: 'ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN'
- name: variant
  default: ''
- name: buildArguments
  default: ''
- name: testArguments
  default: ''
- name: artifactFolder
  default: ''

steps:
- checkout: self
  clean: true
  submodules: recursive
  persistCredentials: True
- task: CmdLine@1
  displayName: Set MVN Access Token in Environment
  inputs:
    filename: echo
    arguments: '##vso[task.setvariable variable=${{ parameters.envVstsMvnAt }}]$(System.AccessToken)'
- template: ../automation-cert.yml
  parameters:
    envVstsMvnAt: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
- task: Gradle@2
  displayName: Assemble ${{ parameters.project }} ${{ parameters.variant }}
  inputs:
    javaHomeSelection: JDKVersion
    jdkVersionOption: "1.11"
    tasks: '${{ parameters.project }}:clean ${{ parameters.project }}:assemble${{ parameters.variant }} ${{ parameters.buildArguments }}'
- task: Gradle@2
  displayName: Publish
  inputs:
    javaHomeSelection: JDKVersion
    jdkVersionOption: "1.11"
    tasks: '${{ parameters.project }}:publish${{ parameters.variant }} ${{ parameters.buildArguments }}'
- task: Gradle@2
  displayName: Run unit tests
  inputs:
    javaHomeSelection: JDKVersion
    jdkVersionOption: "1.11"
    tasks: '${{ parameters.project }}:test${{ parameters.variant }} -PlabSecret=$(LabVaultAppCert)'
- ${{ if ne(parameters.artifactFolder, '') }}:
  - task: CopyFiles@2
    displayName: Copy Files to Artifact Staging Directory
    inputs:
      SourceFolder: ${{ parameters.artifactFolder }}
      TargetFolder: $(build.artifactstagingdirectory)
  - task: PublishPipelineArtifact@1
    name: PublishPipelineArtifacts1
    displayName: Publish Artifact
    inputs:
      ArtifactName: ${{ parameters.project }}
      TargetPath: $(build.artifactstagingdirectory)
